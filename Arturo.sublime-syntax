%YAML 1.2
---
file_extensions:
  - art
  - art.lib
scope: source.arturo
contexts:
  main:
    # Double-quoted string literals
    - match: '"'
      scope: punctuation.definition.string.begin.arturo
      push: double_quoted_string

    # She-bang line
    - match: '#!'
      scope: punctuation.definition.comment.arturo
      push: line_comment

    # Single-line comments
    - match: '//'
      scope: punctuation.definition.comment.arturo
      push: line_comment

    # Multi-line comments
    - match: /\*
      scope: punctuation.definition.comment.source.arturo
      push:
        - meta_scope: comment.block.source.arturo
        - match: \*/\n?
          scope: punctuation.definition.comment.source.aruro
          pop: true

    # Preprocessor directives
    - match: '#(include|define|if|endif|pragma)'
      scope: entity.name.tag.arturo

    # Symbols
    - match: '(\||\$|#|=\>|\-\>)'
      scope: support.function.arturo

    # Operators
    - match: '(\+|\-|\*|\/|\%|\^|\<|\>|=|\<=|\>=|!=)'
      scope: entity.name.tag.arturo

    # System functions
    - match: '(\b)(abs|absolutePath|absolutePath!|acos|acosh|all|and|any|append|append!|asin|asinh|atan|atanh|avg|capitalize|capitalize!|ceil|char|chars|clear|contains|copyDir|copyFile|cos|cosh|count|createDir|csec|csech|ctan|ctanh|currentDir|decodeBase64|decodeBase64!|delete|delete!|deleteBy|deleteBy!|deleteDir|deleteFile|deletePrefix|deletePrefix!|deleteSuffix|deleteSuffix!|dirContent|dirContents|dirExists|distance|encodeBase64|encodeBase64!|endsWith|exec|exp|fileCreationTime|fileExists|fileLastAccess|fileLastModification|fileSize|filter|filter!|first|floor|gcd|get|hasKey|if|inc|inc!|input|inputChar|inspect|isAlpha|isAlphaNumeric|isEmpty|isEven|isLowercase|isNumber|isOdd|isPrime|isUppercase|isWhitespace|join|keys|last|lcm|lines|ln|log|log10|log2|loop|lowercase|lowercase!|map|map!|matches|max|md5|md5!|min|moveDir|moveFile|nand|new|nor|normalizePath|normalizePath!|not|or|padCenter|padCenter!|padLeft|padLeft!|padRight|padRight!|panic|pathDir|pathExtension|pathFilename|pop|pop!|print|product|random|range|read|replace|replace!|return|reverse|reverse!|rotate|rotate!|round|sample|sec|sech|set|set!|sha1|sha1!|shl|shl!|shr|shr!|shuffle|shuffle!|sin|sinh|size|slice|sort|sort!|split|sqrt|startsWith|strip|strip!|sum|swap\!|swap|symlinkExists|syms|tan|tanh|toBin|toHex|toNumber|toOct|toReal|toString|type|unique|unique!|uppercase|uppercase!|values|write|xnor|xor|zip)(\b)(!?)'
      scope: entity.name.tag.arturo

    # Constants
    - match: '\b(true|false|null)\b'
      scope: constant.numeric.arturo

    # Numbers
    - match: '\b(-)?[0-9]([0-9\.]*)\b'
      scope: constant.numeric.arturo

    # Headings
    - match: '&([0-9]+)?'
      scope: markup.heading punctuation.definition.heading

    # Property definitions
    - match: '([a-zA-Z_\.0-9]+)(\s+)?:'
      scope: entity.name.class.arturo

    # Property definitions
    - match: '@([a-zA-Z_\.0-9]+)?'
      scope: storage.type markup.heading

  double_quoted_string:
    - meta_scope: string.quoted.double.arturo
    - match: '\\.'
      scope: constant.character.escape.arturo
    - match: '`'
      scope: punctuation.definition.string.interpolated.element.begin.arturo
      push:
      - meta_scope: source.arturo
      - match: '`'
        scope: punctuation.definition.string.interpolated.element.end.arturo
        pop: true
      - include: 'main'
    - match: '"'
      scope: punctuation.definition.string.end.arturo
      pop: true

  line_comment:
    - meta_scope: comment.line.arturo
    - match: $\n?
      pop: true
      