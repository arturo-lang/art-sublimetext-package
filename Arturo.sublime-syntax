%YAML 1.2
---
file_extensions:
  - art
  - art.d
scope: source.arturo
contexts:
    main:

        # Backtick multiline string literals
        - match: '---'
          scope: string.quoted.double.arturo
          push: curly_string

        # Double-quoted string literals
        - match: '"'
          scope: string.quoted.double.arturo
          push: double_quoted_string

        # Numbers
        - match: '[0-9]+(\.[0-9]+)?'
          scope: text.plain

        # She-bang line
        - match: '#!'
          scope: punctuation.definition.comment.arturo
          push: line_comment

        # Single-line comments
        - match: ;
          scope: punctuation.definition.comment.arturo
          push: line_comment

        # attributes
        - match: '\.\w+:?'
          scope: support.function.arturo # cyan

        # shortcuts
        - match: '@|#|\+|\*|\$|\-|\%|\/|\.\.|\^|~|=>|=|<|>|\\'
        #- match: '(?<=^)\s*\b[^\[|\]|\{|\}|\s]+\b(?!\s*\]|\s*\n)'
          scope: constant.numeric.arturo # purple

        # types
        - match: ':\w+'
          scope: variable.parameter #markup.heading punctuation.definition.heading 

        # label
        - match: '(\b\w+\b:)|:'
        #- match: '(?<=^)\s*\b[^\[|\]|\{|\}|\s]+\b(?!\s*\]|\s*\n)'
          scope: entity.name.class.arturo # green

        # # groups
        # - match: '\[|\]|\(|\)'
        #   scope: markup.heading punctuation.definition.heading # orange

        - match: '\?'
          scope: entity.name.tag.arturo # red

        # call
        - match: '\b(new|join|less|try|push|globalize|equal|lessOrEqual|greater|greaterOrEqual|notEqual|attrs|let|key|call|take|drop|append|remove|combine|serve|sqrt|fold|mail|color|encode|decode|render|read|do|attr|attr|add|sub|mul|div|fdiv|exists|pad|shell|input|capitalize|random|while|max|min|reverse|return|split|prefix|suffix|slice|prefix|suffix|replace|mod|pow|neg|in|not|and|or|xor|shl|shr|pop|dup|swap|nop|eq|ne|gt|ge|lt|le|array|dictionary|function|print|prints|inspect|if|if|else|loop|eval|map|filter|select|size|upper|lower|get|set|to|even|odd|range|sum|product|exit|info|type|is|not|and|or|xor|first|last|unique|sort|inc|dec|set|symbols|stack|case|when)\b'
        #- match: '(?<=^)\s*\b[^\[|\]|\{|\}|\s]+\b(?!\s*\]|\s*\n)'
          scope: entity.name.tag.arturo # red

        - match: '[A-Za-z0-9]+'
          scope: string.unquoted.yaml #plain.text.arturo

    curly_string:
        - meta_scope: string.quoted.double.arturo
        - match: '\|'
          scope: markup.heading entity.name.tag.arturo
          push:
          - meta_scope: source.arturo
          # - match: '[A-Za-z0-9]+'
          #   scope: text.plain.arturo
          - match: '\|'
            scope: markup.heading entity.name.tag.arturo
            pop: true
          - include: 'main'
        - match: '---'
          scope: string.quoted.double.arturo
          pop: true


    double_quoted_string:
        - meta_scope: string.quoted.double.arturo
        - match: '\\.'
          scope: constant.character.escape.arturo
        - match: '\|'
          scope: markup.heading entity.name.tag.arturo
          push:
          - meta_scope: source.arturo
          - meta_content_scope: text.plain
          # - match: '[A-Za-z0-9]+'
          #   scope: text.plain.arturo
          - match: '\|'
            scope: markup.heading entity.name.tag.arturo
            pop: true
          - include: 'main'
        # - match: '`'
        #   scope: punctuation.definition.string.interpolated.element.begin.arturo
        #   push:
        #   - meta_scope: source.arturo
        #   - match: '`'
        #     scope: punctuation.definition.string.interpolated.element.end.arturo
        #     pop: true
        #   - include: 'main'
        - match: '"'
          scope: string.quoted.double.arturo
          pop: true

    line_comment:
        - meta_scope: comment.line.arturo
        - match: $
          pop: true